1.	Решите на базе данных AdventureWorks2017 следующие задачи:

USE [AdventureWorks2017]

--a)	Извлечь все столбцы из таблицы Sales.SalesTerritory.

SELECT *
FROM [Sales].[SalesTerritory];

--b)	Извлечь столбцы TerritoryID и Name из таблицы Sales.SalesTerritory.

SELECT [TerritoryID], [Name]
FROM [Sales].[SalesTerritory];

--c)	Найдите все данные, которые существует для людей из Person.Person с LastName = ‘Norman’.

SELECT *
FROM [Person].[Person]
WHERE [LastName] = 'Norman';

--d)	Найдите все строки из Person.Person, где EmailPromotion не равен 2. 

SELECT *
FROM [Person].[Person]
WHERE [EmailPromotion] !=2;

3.На официальном сайте Microsoft ещё раз просмотрите
 синтаксис SUM, AVG, COUNT, MIN, MAX и примеры для каждой функции. 

Какие ещё агрегатные функции существуют в языке T-SQL? Приведите несколько примеров.

APPROX_COUNT_DISTINCT - Эта функция возвращает приблизительное количество уникальных значений, не равных NULL, в группе.

SELECT O_OrderStatus, APPROX_COUNT_DISTINCT(O_OrderKey) AS Approx_Distinct_OrderKey
FROM dbo.Orders
GROUP BY O_OrderStatus
ORDER BY O_OrderStatus; 

CHECKSUM_AGG - Эта функция возвращает контрольную сумму значений в группе. Значения NULL функция CHECKSUM_AGG не учитывает.

SELECT CHECKSUM_AGG(CAST(Quantity AS INT))  
FROM Production.ProductInventory;  

GROUPING Указывает, является ли указанное выражение столбца в списке GROUP BY статистическим или нет.
В результирующем наборе функция GROUPING возвращает 1 (статистическое выражение) или ноль (нестатистическое выражение).

SELECT SalesQuota, SUM(SalesYTD) 'TotalSalesYTD', GROUPING(SalesQuota) AS 'Grouping'  
FROM Sales.SalesPerson  
GROUP BY SalesQuota WITH ROLLUP;  

STDEV - Возвращает статистическое стандартное отклонение всех значений в указанном выражении.

SELECT STDEV(Bonus)  
FROM Sales.SalesPerson; 

4.	Решите на базе данных AdventureWorks2017 следующие задачи:

USE [AdventureWorks2017]

--a)	Сколько уникальных PersonType существует для людей из Person.Person с LastName начинающиеся с буквы М или не содержащий 1 в EmailPromotion.

SELECT COUNT (DISTINCT [PersonType]) 
FROM [Person].[Person]
WHERE [LastName] LIKE 'M%' OR [EmailPromotion]!=1;

--b)	Вывести первых 3 специальных предложений из Sales.SpecialOffer с наибольшими DiscountPct, которые начинали действовать с 2013-01-01 по 2014-01-01.

SELECT TOP 3  *
FROM [Sales].[SpecialOffer]
WHERE [StartDate] BETWEEN '2013-01-01' AND '2014-01-01'
ORDER BY [DiscountPct] DESC
;
--c)	Найти самый минимальный вес и самый максимальный размер продукта из Production.Product.
SELECT MIN([Weight]) AS MIN_WEIGHT,  MAX ([Size]) AS MAX_SIZE
FROM [Production].[Product];

--d)	Найти самый минимальный вес и самый максимальный размер продукта для каждой подкатегории ProductSubcategoryID из Production.Product. 

SELECT [ProductSubcategoryID], MIN([Weight]) AS MIN_WEIGHT,  MAX ([Size]) AS MAX_SIZE
FROM [Production].[Product]
GROUP BY [ProductSubcategoryID];

--e)	Найти самый минимальный вес и самый максимальный размер продукта для каждой подкатегории ProductSubcategoryID из Production.Product, где цвет продукта определен(Color).

SELECT [ProductSubcategoryID], MIN([Weight]) AS MIN_WEIGHT,  MAX ([Size]) AS MAX_SIZE
FROM [Production].[Product]
where [Color] is not null
GROUP BY [ProductSubcategoryID];







